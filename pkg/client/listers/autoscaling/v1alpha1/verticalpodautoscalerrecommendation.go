/*
Copyright 2022 The Katalyst Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubewharf/katalyst-api/pkg/apis/autoscaling/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VerticalPodAutoscalerRecommendationLister helps list VerticalPodAutoscalerRecommendations.
type VerticalPodAutoscalerRecommendationLister interface {
	// List lists all VerticalPodAutoscalerRecommendations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VerticalPodAutoscalerRecommendation, err error)
	// VerticalPodAutoscalerRecommendations returns an object that can list and get VerticalPodAutoscalerRecommendations.
	VerticalPodAutoscalerRecommendations(namespace string) VerticalPodAutoscalerRecommendationNamespaceLister
	VerticalPodAutoscalerRecommendationListerExpansion
}

// verticalPodAutoscalerRecommendationLister implements the VerticalPodAutoscalerRecommendationLister interface.
type verticalPodAutoscalerRecommendationLister struct {
	indexer cache.Indexer
}

// NewVerticalPodAutoscalerRecommendationLister returns a new VerticalPodAutoscalerRecommendationLister.
func NewVerticalPodAutoscalerRecommendationLister(indexer cache.Indexer) VerticalPodAutoscalerRecommendationLister {
	return &verticalPodAutoscalerRecommendationLister{indexer: indexer}
}

// List lists all VerticalPodAutoscalerRecommendations in the indexer.
func (s *verticalPodAutoscalerRecommendationLister) List(selector labels.Selector) (ret []*v1alpha1.VerticalPodAutoscalerRecommendation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VerticalPodAutoscalerRecommendation))
	})
	return ret, err
}

// VerticalPodAutoscalerRecommendations returns an object that can list and get VerticalPodAutoscalerRecommendations.
func (s *verticalPodAutoscalerRecommendationLister) VerticalPodAutoscalerRecommendations(namespace string) VerticalPodAutoscalerRecommendationNamespaceLister {
	return verticalPodAutoscalerRecommendationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VerticalPodAutoscalerRecommendationNamespaceLister helps list and get VerticalPodAutoscalerRecommendations.
type VerticalPodAutoscalerRecommendationNamespaceLister interface {
	// List lists all VerticalPodAutoscalerRecommendations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VerticalPodAutoscalerRecommendation, err error)
	// Get retrieves the VerticalPodAutoscalerRecommendation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VerticalPodAutoscalerRecommendation, error)
	VerticalPodAutoscalerRecommendationNamespaceListerExpansion
}

// verticalPodAutoscalerRecommendationNamespaceLister implements the VerticalPodAutoscalerRecommendationNamespaceLister
// interface.
type verticalPodAutoscalerRecommendationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VerticalPodAutoscalerRecommendations in the indexer for a given namespace.
func (s verticalPodAutoscalerRecommendationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VerticalPodAutoscalerRecommendation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VerticalPodAutoscalerRecommendation))
	})
	return ret, err
}

// Get retrieves the VerticalPodAutoscalerRecommendation from the indexer for a given namespace and name.
func (s verticalPodAutoscalerRecommendationNamespaceLister) Get(name string) (*v1alpha1.VerticalPodAutoscalerRecommendation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("verticalpodautoscalerrecommendation"), name)
	}
	return obj.(*v1alpha1.VerticalPodAutoscalerRecommendation), nil
}
